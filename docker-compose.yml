version: "3.7"
services:
    webapp:
        container_name: webapp
        build:
            context: '.'
            dockerfile: 'Webapp.Dockerfile'
        depends_on:
            - db
            - webapp_migrations
        environment: 
            DATABASE_URL: "postgres://postgres@postgres-server/"
            PYTHONPATH: ".."
        env_file:
            - webapp/.env
        volumes:
            - ./webapp/:/webapp/
        secrets:
            - webapp_secret_key
            - webapp_admin_password
            - webapp_password_salt
        ports:
            - 8000:8000
            - 8080:8080
        networks: 
            - webapp-network

    webapp_migrations:
        container_name: webapp_migrations
        image: backend_webapp
        command: flask db upgrade
        depends_on:
            - db
        environment: 
            DATABASE_URL: "postgres://postgres@postgres-server/"
        env_file:
            - webapp/.env
        volumes:
            - ./webapp/data:/webapp/data
        networks: 
            - webapp-network
    
    proxy:
        image: nginx
        container_name: nginx-proxy
        build:
            context: '.'
            dockerfile: 'NginxProxy.Dockerfile'
        depends_on:
            - webapp
        ports:
            - 80:80
            - 443:443
        networks: 
            - webapp-network

    db:
        image: postgres:11
        container_name: postgres-server
        ports:
            - "5432:5432"
        volumes:
            - data-postgres:/var/lib/postgresql/data
        networks: 
            - webapp-network

volumes:
    data-postgres:

networks: 
    webapp-network:

secrets:
    webapp_secret_key:
        file: secrets/secret_key.txt
    webapp_admin_password:
        file: secrets/admin_password.txt
    webapp_password_salt:
        file: secrets/password_salt.txt
